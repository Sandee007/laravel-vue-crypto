import unserialize from"locutus/php/var/unserialize";import CryptoJS from"crypto-js";export default class LaravelVueCrypto{constructor(APP_KEY){this.APP_KEY=CryptoJS.enc.Base64.parse(APP_KEY.slice(7))}encrypt(data){return{payload:encryptRequest(data,this.APP_KEY)}}decrypt(data){return decryptResponse(data,this.APP_KEY)}}function encryptRequest(data,key){let iv=CryptoJS.lib.WordArray.random(16);let options={iv:iv,mode:CryptoJS.mode.CBC,padding:CryptoJS.pad.Pkcs7};let encrypted=CryptoJS.AES.encrypt(JSON.stringify(data),key,options);encrypted=encrypted.toString();iv=CryptoJS.enc.Base64.stringify(iv);let result={iv:iv,value:encrypted,mac:CryptoJS.HmacSHA256(iv+encrypted,key).toString()};result=JSON.stringify(result);result=CryptoJS.enc.Utf8.parse(result);return CryptoJS.enc.Base64.stringify(result)}function decryptResponse(data,key){const parseBase64=CryptoJS.enc.Base64.parse(data);const decoded=parseBase64.toString(CryptoJS.enc.Utf8);const parseJson=JSON.parse(decoded);const iv=CryptoJS.enc.Base64.parse(parseJson.iv);const decrypted=CryptoJS.AES.decrypt(parseJson.value,key,{iv:iv});const result=decrypted.toString(CryptoJS.enc.Utf8);const unserialized=unserialize(result);return JSON.parse(unserialized)}